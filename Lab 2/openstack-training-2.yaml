heat_template_version: 2016-10-14
description: Lab 1,2 - Params, Params Group, Resource Section
parameters:
  username:
    type: string
    constraints:
     - length: { min: 6, max: 8 }
       description: User name must be between 6 and 8 characters
     - allowed_pattern: "[A-Z]+[a-zA-Z0-9]*"
       description: User name must start with an uppercase character
  password:
    type: string
    hidden: true
  key_name:
    type: string
    description: Name of an existing key pair to use for the server
    constraints:
      - custom_constraint: nova.keypair
  flavor:
    type: string
    description: Flavor for the server to be created
    default: m1.small
    constraints:
      - custom_constraint: nova.flavor
  image:
    type: string
    description: Image ID or image name to use for the server
    constraints:
      - custom_constraint: glance.image
  env_type:
    default: test
    type: string
    constraints:
      - allowed_values: [prod, test]
  network:
    type: string
    description: Network ID to use
    default: net-2061-ext-ssh
    constraints:
      - custom_constraint: neutron.network

parameter_groups:
- label: user-auth
  description: User Authentication
  parameters:
  - username
  - password
- label: other
  description: Environment & Network
  parameters:
  - env_type
  - network
  - key_name
  - image
  - flavor

conditions:
  create_prod_res: {equals : [{get_param: env_type}, "prod"]}

resources:
  server1:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
      - network: { get_param: network }
    depends_on: server2

  server2:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      image: { get_param: image }
      flavor: { get_param: flavor }
      networks:
      - network: { get_param: network }

  volume:
    type: OS::Cinder::Volume
    condition: create_prod_res
    properties:
      size: 1

outputs:
  server1_ip:
    description: IP address of the deployed compute instance
    value: { get_attr: [server1, first_address] }
